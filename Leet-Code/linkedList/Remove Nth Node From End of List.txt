/*
Remove Nth Node From End of List
Companies:
Walmart,Google,Netflix,Oracle,Microsoft,Samsung,Adobe,CRED,Meesho,Swiggy,Dream
11,InMobi,Oyo,PayTM
Platform : leetcode -19
Description:
Given the head of a linked list, remove the nth node from the end of the list and return its

head.

Example 1:
Input: head = [1,2,3,4,5], n = 2
Output: [1,2,3,5]
Example 2:
Input: head = [1], n = 1
Output: []
Example 3:
Input: head = [1,2], n = 1
Output: [1]

Constraints:
The number of nodes in the list is sz.
1 <= sz <= 30
0 <= Node.val <= 100
1 <= n <= sz
*/


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */


class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {

        // if(head.next==null){
        //     return null;
        // }

        ListNode dummy = new ListNode(-1);
        dummy.next=head;

        ListNode slow=dummy;
        ListNode fast=dummy;

        int i=0;
        while( i<n){
            fast=fast.next;
            i++;
        } 

        while(fast.next!=null){
            slow=slow.next;
            fast=fast.next;            
        }

        slow.next=slow.next.next;
        

        return dummy.next;


    }
}



















