/*

1:Delete Node in a Linked List
Companies: Adobe, Google, Bloomberg, Facebook, Oracle, Netflix,Flipkart, CRED, Meesho,
Swiggy, Dream11, InMobi, Oyo
Platform : leetcode - 237
Description:
There is a singly-linked list head and we want to delete a node node in it.
You are given the node to be deleted node. You will not be given access to the first node

of the head.

All the values of the linked list are unique, and it is guaranteed that the given node is not

the last in the linked list.

Delete the given node. Note that deleting the node does not mean removing it from

memory. We mean:

The value of the given node should not exist in the linked list.
The number of nodes in the linked list should decrease by one.
All the values before the node should be in the same order.
All the values after the node should be in the same order.
Custom testing:
For the input, you should provide the entire linked list head and the node to be given
node. node should not be the last node of the list and should be an actual
node in the list.

We will build the linked list and pass the node to your function.
The output will be the entire list after calling your function.

Example 1:
Input: head = [4,5,1,9], node = 5
Output: [4,1,9]
Explanation: You are given the second node with value 5, the linked list should become
4 -> 1 -> 9 after calling your function.

Example 2:
Input: head = [4,5,1,9], node = 1
Output: [4,5,9]
Explanation: You are given the third node with value 1, the linked list should become 4 ->
5 -> 9 after calling your function.
*/






/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public void deleteNode(ListNode node) {
        ListNode ptr=node;
        ListNode ptr1=node.next;

        ptr.val=ptr1.val;
        ptr.next=ptr1.next;

    
    }
}



